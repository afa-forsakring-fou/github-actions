name: 'React'
description: 'React build and test steps'
inputs:
  GIT_TOKEN:
    description: 'GIT_TOKEN from secrets'
    required: true
  NODE_VERSION:
    description: "Node version"
    required: true
  X_HASURA_ADMIN_SECRET:
    description: 'X_HASURA_ADMIN_SECRET from secrets'
    required: true
  HASURA_URL:
    description: 'HASURA_URL from secrets'
    required: true
  CYPRESS_RECORD_KEY:
    description: 'CYPRESS_RECORD_KEY from secrets'
    required: true
  PERCY_TOKEN:
    description: 'PERCY_TOKEN from secrets'
    required: true

runs:
  using: "composite"
  steps:
#  - name: Setup node
#    uses: ./composite-actions/.github/workflows/actions/react/setup-node
#    with:
#      NODE_VERSION: ${{ inputs.NODE_VERSION }}
#      GIT_TOKEN: ${{ inputs.GIT_TOKEN }}
      
  - name: Echo step
    uses: ./composite-actions/.github/workflows/actions/echo-step
    if: github.event.repository.name == 'fou-web'
    with:
      PRINT: "Clean target"

  - name: Clean target
    shell: bash
    if: github.event.repository.name == 'fou-web'
    run: yarn clean

  - name: Get yarn and NextJS cache
    uses: ./composite-actions/.github/workflows/actions/react/yarn-cache
    with:
      GIT_TOKEN: ${{ inputs.GIT_TOKEN }}

  - name: Install yarn
    uses: ./composite-actions/.github/workflows/actions/react/yarn-install
    with:
      GIT_TOKEN: ${{ inputs.GIT_TOKEN }}

  - name: Echo step
    uses: ./composite-actions/.github/workflows/actions/echo-step
    with:
      PRINT: "Build"

  - name: Build
    shell: bash
    run: |
      yarn build
    env:
      GIT_TOKEN: ${{ inputs.GIT_TOKEN }}
      NODE_ENV: production
      X_HASURA_ADMIN_SECRET: ${{ inputs.X_HASURA_ADMIN_SECRET }}
      HASURA_URL: ${{ inputs.HASURA_URL }}

  - name: Echo step
    uses: ./composite-actions/.github/workflows/actions/echo-step
    with:
      PRINT: "Run tests (CI)"

  - name: Run tests (CI)
    shell: bash
    id: run_tests
    run: |
      echo "::set-output name=status::failure"
      yarn test:ci
      echo "::set-output name=status::success"
    env:
      GIT_TOKEN: ${{ inputs.GIT_TOKEN }}
      PERCY_TOKEN: ${{ inputs.PERCY_TOKEN }}
      CYPRESS_RECORD_KEY: ${{ inputs.CYPRESS_RECORD_KEY }}
      X_HASURA_ADMIN_SECRET: ${{ inputs.X_HASURA_ADMIN_SECRET }}
      HASURA_URL: ${{ inputs.HASURA_URL }}
  
  - name: Echo step
    uses: ./composite-actions/.github/workflows/actions/echo-step
    with:
      PRINT: "Upload coverage data"

  - name: Upload coverage data
    uses: actions/upload-artifact@v3.1.0
    if: steps.run_tests.outputs.status == 'success'
    with:
      name: coverage
      path: coverage

  - name: Echo step
    uses: ./composite-actions/.github/workflows/actions/echo-step
    with:
      PRINT: "Upload screenshots"

  - name: Upload screenshots
    uses: actions/upload-artifact@v3.1.0
    if: steps.run_tests.outputs.status != 'success'
    with:
      name: cypress-screenshots
      path: cypress/screenshots

  - name: Echo step
    uses: ./composite-actions/.github/workflows/actions/echo-step
    with:
      PRINT: "Upload videos"

  - name: Upload videos
    uses: actions/upload-artifact@v3.1.0
    if: steps.run_tests.outputs.status != 'success'
    with:
      name: cypress-videos
      path: cypress/videos
