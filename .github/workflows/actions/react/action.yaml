name: 'React'
description: 'React build and test steps'
inputs:
  GIT_TOKEN:
    description: 'GIT_TOKEN from secrets'
    required: true
  NODE_VERSION:
    description: "Node version"
    required: false
  CYPRESS_RECORD_KEY:
    description: 'CYPRESS_RECORD_KEY from secrets'
    required: true
  MAIL:
    description: 'Mail from secrets'
    required: false
  MATRIX:
    description: 'MATRIX (runs) from input'
    required: false
    default: "1"
  COREPACK_ENABLE:
    description: "Force run 'corepack enable' in setup-node"
    required: false
    type: boolean
    default: false

runs:
  using: "composite"
  steps:
  - name: Setup node
    if: "${{ inputs.NODE_VERSION != '' }}"
    uses: ./composite-actions/.github/workflows/actions/react/setup-node
    with:
      NODE_VERSION: ${{ inputs.NODE_VERSION }}
      GIT_TOKEN: ${{ inputs.GIT_TOKEN }}
      COREPACK_ENABLE: ${{ inputs.COREPACK_ENABLE }}

  - name: Echo step
    uses: ./composite-actions/.github/workflows/actions/echo-step
    if: github.event.repository.name == 'fou-web'
    with:
      PRINT: "Clean target"

  - name: Clean target
    shell: bash
    if: github.event.repository.name == 'fou-web'
    run: yarn clean

  - name: Get yarn and NextJS cache
    uses: ./composite-actions/.github/workflows/actions/react/yarn-cache
    with:
      GIT_TOKEN: ${{ inputs.GIT_TOKEN }}

  - name: Echo step
    uses: ./composite-actions/.github/workflows/actions/echo-step
    with:
      PRINT: "Lint"

  - name: Lint
    shell: bash
    run: |
      yarn lint
    env:
      GIT_TOKEN: ${{ inputs.GIT_TOKEN }}

  - name: Echo step
    uses: ./composite-actions/.github/workflows/actions/echo-step
    with:
      PRINT: "Build"

  - name: Build
    shell: bash
    run: |
      yarn build
    env:
      GIT_TOKEN: ${{ inputs.GIT_TOKEN }}
      NODE_ENV: production

  - name: Echo step
    uses: ./composite-actions/.github/workflows/actions/echo-step
    with:
      PRINT: "Run tests (CI)"

  - name: Run tests (CI)
    shell: bash
    id: run_tests
    run: |
      echo "status=failure" >> $GITHUB_OUTPUT
      yarn test:ci
      echo "status=success" >> $GITHUB_OUTPUT
    env:
      GIT_TOKEN: ${{ inputs.GIT_TOKEN }}
      CYPRESS_RECORD_KEY: ${{ inputs.CYPRESS_RECORD_KEY }}

  - name: Echo step
    uses: ./composite-actions/.github/workflows/actions/echo-step
    with:
      PRINT: "Upload coverage data"

  - name: Upload coverage data
    uses: actions/upload-artifact@v4
    if: steps.run_tests.outputs.status == 'success'
    with:
      name: coverage
      path: coverage

  - name: Echo step
    uses: ./composite-actions/.github/workflows/actions/echo-step
    with:
      PRINT: "Upload screenshots"

  - name: Upload screenshots
    uses: actions/upload-artifact@v4
    if: steps.run_tests.outputs.status != 'success'
    with:
      name: cypress-screenshots
      path: cypress/screenshots

  - name: Echo step
    uses: ./composite-actions/.github/workflows/actions/echo-step
    with:
      PRINT: "Upload videos"

  - name: Upload videos
    uses: actions/upload-artifact@v4
    if: steps.run_tests.outputs.status != 'success'
    with:
      name: cypress-videos
      path: cypress/videos
