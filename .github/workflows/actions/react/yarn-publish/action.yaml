name: 'Publish package'
description: 'Publish package and set version'
inputs:
  GIT_TOKEN:
    description: 'GIT_TOKEN from secrets'
    required: true
  MAIL:
    description: 'MAIL from secrets'
    required: true

runs:
  using: "composite"
  steps:
  - name: Echo step
    uses: ./composite-actions/.github/workflows/actions/echo-step
    with:
      PRINT: "Publish package and set version"

  - name: Config git
    shell: bash
    run: |
      git config --global user.name 'Github Actions'
      git config --global user.email ''${{ inputs.MAIL }}''

  - name: Get yarn version
    shell: bash
    id: yarn-version
    run: |
      yarn_version=$(yarn -v)
      first_letter_of_version=${yarn_version:0:1}
      echo "yarn_version=$first_letter_of_version" >> $GITHUB_OUTPUT

  - name: Yarn publish (legacy)
    if: ${{ steps.yarn-version.outputs.yarn_version == "1" }}
    run: |
      yarn config set version-git-tag true
      yarn config set version-tag-prefix "v"
      yarn config set version-git-message "Update to version v%s [skip actions]"
      yarn version --patch
      yarn publish
      git push
    env:
      NPM_AUTH_TOKEN: ${{ inputs.GIT_TOKEN }}

  - name: Yarn publish
    if: ${{ steps.yarn-version.outputs.yarn_version != "1" }}
    run: |
      yarn version patch
      VERSION="v$(cat package.json | jq -r .version)"
      yarn npm publish
      git tag "$VERSION"
      git add package.json
      git commit -m "Update to version $VERSION"
      git push origin tag "$VERSION"
      git push
    env:
      NPM_AUTH_TOKEN: ${{ inputs.GITHUB_TOKEN }}
