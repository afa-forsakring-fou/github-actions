on:
  workflow_call:

name: Main Workflow

jobs:
  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest
    if: "! startsWith(github.event.head_commit.message, '$DEPLOYED/${{ github.event.repository.name }}')"
    env: 
      DEPLOYED: ${{ secrets.DEPLOYED }}

    concurrency: 
      group: ${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2

      - name: Setup Node.js
        uses: actions/setup-node@v3.4.1
        if: github.event.repository.name == 'fou-web'
        with:
          node-version: '14'
          cache: 'yarn'
      
      - name: Clean target
        if: github.event.repository.name == 'fou-web'
        run: yarn clean

      - name: Checkout composite actions
        uses: actions/checkout@v3.0.2
        with:
          repository: afa-forsakring-fou/github-actions
          path: composite-actions

      - name: Get yarn and NextJS cache
        uses: ./composite-actions/.github/workflows/actions/yarn-cache
        with:
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
        
      - name: Install packages & build
        run: |
          yarn install --immutable-cache
          yarn build
        env:
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
          NODE_ENV: production
          X_HASURA_ADMIN_SECRET: ${{ secrets.X_HASURA_ADMIN_SECRET }}
          HASURA_URL: ${{ secrets.X_HASURA_URL }}

      - name: Run tests (CI)
        id: run_tests
        run: |
          echo "::set-output name=status::failure"
          yarn test:ci
          echo "::set-output name=status::success"
        env:
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          X_HASURA_ADMIN_SECRET: ${{ secrets.X_HASURA_ADMIN_SECRET }}
          HASURA_URL: ${{ secrets.X_HASURA_URL }}
      
      - name: Upload coverage data
        uses: actions/upload-artifact@v2
        if: steps.run_tests.outputs.status == 'success'
        with:
          name: coverage
          path: coverage

      - name: Upload screenshots
        uses: actions/upload-artifact@v3.1.0
        if: steps.run_tests.outputs.status != 'success'
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - name: Upload videos
        uses: actions/upload-artifact@v3.1.0
        if: steps.run_tests.outputs.status != 'success'
        with:
          name: cypress-videos
          path: cypress/videos

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    if: "! startsWith(github.event.head_commit.message, '$DEPLOYED/${{ github.event.repository.name }}')"
    env: 
      DEPLOYED: ${{ secrets.DEPLOYED }}

    steps:
      - name: Clone Repository
        uses: actions/checkout@v3.0.2

      - name: Setup Node.js
        uses: actions/setup-node@v3.4.1
        if: github.event.repository.name == 'fou-web'
        with:
          node-version: '14'
          cache: 'yarn'

      - name: Checkout composite actions
        uses: actions/checkout@v3.0.2
        with:
          repository: afa-forsakring-fou/github-actions
          path: composite-actions

      - name: Get yarn and NextJS cache
        uses: ./composite-actions/.github/workflows/actions/yarn-cache
        with:
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}

      - name: Install yarn
        run: yarn install --immutable-cache
        env:
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}

      # Will SonarCloud change to action@main ?
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-to-gke:
    name: Build and Deploy to GKE
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
        with:
          submodules: recursive
          token: ${{ secrets.GIT_TOKEN }}

      - name: Config git
        run: |
          git config --global user.name 'Github Actions'
          git config --global user.email ''${{ secrets.MAIL }}''

# fou-web has three cashe steps here 

      - id: auth
        uses: google-github-actions/auth@v0.8.0
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      # Setup gcloud CLI (will they change from master to main soon?)
      - uses: google-github-actions/setup-gcloud@v0.5.1
        with:
          version: 350.0.0

      # Configure docker to use the gcloud command-line tool as a credential helper
      - name: Set up GKE + Docker
        run: |
          # Set up docker to authenticate
          # via gcloud command-line tool.
          gcloud auth configure-docker

      # Set up kustomize (will kustomize change from /master/ to /main/ soon?)
      - name: Set up Kustomize
        run: |-
          cd /usr/bin
          curl -s "https://raw.githubusercontent.com/\
          kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | sudo bash

      # Build the Docker image, Publish it to the image repository, Commit the new tag reference, Push those commits
      - name: Build
        run: |
          make env deploy_ci
        env:
          GIT_TOKEN: ${{secrets.GIT_TOKEN}}
          GIT_USER: "GithubActions"
          X_HASURA_ADMIN_SECRET: ${{ secrets.X_HASURA_ADMIN_SECRET }}
